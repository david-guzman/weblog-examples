package guzman.weblog.jsr375.rest;

import org.glassfish.soteria.identitystores.annotation.Credentials;
import org.glassfish.soteria.identitystores.annotation.EmbeddedIdentityStoreDefinition;

import javax.annotation.security.DeclareRoles;
import javax.security.enterprise.authentication.mechanism.http.BasicAuthenticationMechanismDefinition;
import javax.servlet.ServletException;
import javax.servlet.annotation.HttpConstraint;
import javax.servlet.annotation.ServletSecurity;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

@WebServlet("/servlet")
@DeclareRoles({"USER"})
@ServletSecurity(@HttpConstraint(rolesAllowed = "USER"))
@BasicAuthenticationMechanismDefinition(realmName = "embedded")
@EmbeddedIdentityStoreDefinition({@Credentials(callerName = "testUser", password = "testPassword", groups = {"USER"})})
public class AuthServlet extends HttpServlet {

    private static final long serialVersionUID = 1L;

    @Override
    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        response.getWriter().write("This is generated by a servlet \n");

        String webName = null;
        if (request.getUserPrincipal() != null) {
            webName = request.getUserPrincipal().getName();
        }

        response.getWriter().write("web username: " + webName + "\n");
        response.getWriter().write("web user has role \"foo\": " + request.isUserInRole("USER") + "\n");

    }

}
